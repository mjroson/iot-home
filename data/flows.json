[{"id":"8ce93302.bf92a","type":"tab","label":"Flow 1","disabled":false,"info":""},{"id":"ad02f558.1850b8","type":"tab","label":"Flow 2","disabled":false,"info":""},{"id":"557e25f5.8528fc","type":"tab","label":"Flow 3","disabled":true,"info":""},{"id":"9f754981.3c9138","type":"tab","label":"Flow 1","disabled":true},{"id":"7fa7a2.3465486","type":"sqlitedb","db":"/data/db","mode":"RWC"},{"id":"3e268976.e42406","type":"ui_group","name":"Sensores","tab":"86d4843b.0b29e8","order":1,"disp":true,"width":"6","collapse":false},{"id":"86d4843b.0b29e8","type":"ui_tab","name":"Home","icon":"dashboard","disabled":false,"hidden":false},{"id":"d9574eee.b544f","type":"ui_base","theme":{"name":"theme-dark","lightTheme":{"default":"#0094CE","baseColor":"#0094CE","baseFont":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif","edited":true,"reset":false},"darkTheme":{"default":"#097479","baseColor":"#e78600","baseFont":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif","edited":true,"reset":false},"customTheme":{"name":"Untitled Theme 1","default":"#4B7930","baseColor":"#4B7930","baseFont":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"},"themeState":{"base-color":{"default":"#097479","value":"#e78600","edited":true},"page-titlebar-backgroundColor":{"value":"#e78600","edited":false},"page-backgroundColor":{"value":"#111111","edited":false},"page-sidebar-backgroundColor":{"value":"#ffffff","edited":false},"group-textColor":{"value":"#ffaa34","edited":false},"group-borderColor":{"value":"#555555","edited":false},"group-backgroundColor":{"value":"#333333","edited":false},"widget-textColor":{"value":"#eeeeee","edited":false},"widget-backgroundColor":{"value":"#e78600","edited":false},"widget-borderColor":{"value":"#333333","edited":false},"base-font":{"value":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"}},"angularTheme":{"primary":"indigo","accents":"blue","warn":"red","background":"grey"}},"site":{"name":"Dsahboard","hideToolbar":"false","allowSwipe":"false","lockMenu":"false","allowTempTheme":"true","dateFormat":"DD/MM/YYYY","sizes":{"sx":48,"sy":48,"gx":6,"gy":6,"cx":6,"cy":6,"px":0,"py":0}}},{"id":"ecac7bdd.76f698","type":"sqlitedb","db":"/home/pi/sqlite/nodered"},{"id":"2f20f4ba.c4dd6c","type":"ui_group","name":"MiFlora","tab":"a4c5a4d9.d98a48","order":2,"disp":true,"width":"6"},{"id":"a5f1f4cd.5442c8","type":"ui_group","name":"Report","tab":"f9e0f061.6267","order":2,"disp":true,"width":"18"},{"id":"6d8b13cf.4722dc","type":"ui_group","name":"Selection","tab":"f9e0f061.6267","order":1,"disp":true,"width":"5"},{"id":"a4c5a4d9.d98a48","type":"ui_tab","name":"Home","icon":"home","order":"1"},{"id":"f9e0f061.6267","type":"ui_tab","name":"Reports","icon":"dashboard","order":9},{"id":"7146417f.9c024","type":"inject","z":"8ce93302.bf92a","name":"Starting","props":[],"repeat":"60","crontab":"","once":false,"onceDelay":0.1,"topic":"","x":150,"y":300,"wires":[["3b21a462.00f36c"]]},{"id":"c934c3f4.ed201","type":"function","z":"8ce93302.bf92a","name":"Save temperature","func":"var sql = \"\";\nvar d = new Date();\nvar epoch = d.getTime();\n\nvar outputs = [];\n\nsql = \"INSERT INTO sensor_data (device,sensor,value,epoch) \" +\n        \"VALUES ('nodemcu', 'temp',\" + msg.payload + ',' + epoch +\")\";\n\noutputs.push({ topic: sql });\n\n// node.status()\n\n\nreturn [ outputs ];","outputs":1,"noerr":0,"initialize":"","finalize":"","x":530,"y":300,"wires":[["3706aa24.73e686"]]},{"id":"3b21a462.00f36c","type":"http request","z":"8ce93302.bf92a","name":"Get temperature","method":"GET","ret":"txt","paytoqs":"ignore","url":"http://192.168.0.132/temperature","tls":"","persist":false,"proxy":"","authType":"","x":320,"y":300,"wires":[["c934c3f4.ed201"]]},{"id":"3706aa24.73e686","type":"sqlite","z":"8ce93302.bf92a","mydb":"7fa7a2.3465486","sqlquery":"msg.topic","sql":"","name":"Sensor data","x":730,"y":360,"wires":[[]]},{"id":"f7a5c434.674ac8","type":"inject","z":"8ce93302.bf92a","name":"Starting","props":[],"repeat":"1800","crontab":"","once":false,"onceDelay":0.1,"topic":"","x":140,"y":420,"wires":[["9e98f27d.64a69"]]},{"id":"57bcf997.cbef68","type":"function","z":"8ce93302.bf92a","name":"Save humidity","func":"var sql = \"\";\nvar d = new Date();\nvar epoch = d.getTime();\n\nvar outputs = [];\n\nsql = \"INSERT INTO sensor_data (device,sensor,value,epoch) \" +\n        \"VALUES ('nodemcu', 'humidity',\" + msg.payload + ',' + epoch +\")\";\n\noutputs.push({ topic: sql });\n\n// node.status()\n\n\nreturn [ outputs ];","outputs":1,"noerr":0,"initialize":"","finalize":"","x":510,"y":420,"wires":[["3706aa24.73e686"]]},{"id":"9e98f27d.64a69","type":"http request","z":"8ce93302.bf92a","name":"Get humidity","method":"GET","ret":"txt","paytoqs":"ignore","url":"http://192.168.0.132/humidity","tls":"","persist":false,"proxy":"","authType":"","x":300,"y":420,"wires":[["57bcf997.cbef68"]]},{"id":"cf4a2525.0f7438","type":"function","z":"9f754981.3c9138","name":"Save to DB","func":"var sql = \"\";\nvar d = new Date();\nvar epoch = d.getTime();\nvar outputs = [];\n\nsql = \"INSERT INTO sensor_data (device,sensor,value,epoch) \" +\n        \"VALUES ('miflora','temp',\"+msg.payload.temperature+\",\"+epoch+\")\";\noutputs.push({topic:sql});        \nsql = \"INSERT INTO sensor_data(device,sensor,value,epoch) \" +\n        \"VALUES ('miflora','sunlight',\"+msg.payload.sunlight+\",\"+epoch+\")\";\noutputs.push({topic:sql});        \nsql = \"INSERT INTO sensor_data(device,sensor,value,epoch) \" +\n        \"VALUES ('miflora','moisture',\"+msg.payload.moisture+\",\"+epoch+\")\";\noutputs.push({topic:sql});        \nsql = \"INSERT INTO sensor_data(device,sensor,value,epoch) \" +\n        \"VALUES ('miflora','fertility',\"+msg.payload.fertility+\",\"+epoch+\")\";        \noutputs.push({topic:sql});        \nsql = \"INSERT INTO sensor_data(device,sensor,value,epoch) \" +\n        \"VALUES ('miflora','battery',\"+msg.payload.battery+\",\"+epoch+\")\";        \noutputs.push({topic:sql});        \n    \n// Update the status with current timestamp\nvar now = new Date();\nvar yyyy = now.getFullYear();\nvar mm = now.getMonth() < 9 ? \"0\" + (now.getMonth() + 1) : (now.getMonth() + 1); // getMonth() is zero-based\nvar dd  = now.getDate() < 10 ? \"0\" + now.getDate() : now.getDate();\nvar hh = now.getHours() < 10 ? \"0\" + now.getHours() : now.getHours();\nvar mmm  = now.getMinutes() < 10 ? \"0\" + now.getMinutes() : now.getMinutes();\nvar ss  = now.getSeconds() < 10 ? \"0\" + now.getSeconds() : now.getSeconds();\nnode.status({fill:\"blue\",shape:\"ring\",text:\"Last update: \"+dd + \".\" + mm + \".\" + yyyy + \" \" + hh + \":\" + mmm + \":\" + ss});    \n      \nreturn [ outputs ];","outputs":1,"noerr":0,"x":131,"y":94,"wires":[["77eb7e83.0b75c"]]},{"id":"77eb7e83.0b75c","type":"sqlite","z":"9f754981.3c9138","mydb":"ecac7bdd.76f698","name":"Node Red DB","x":375,"y":94,"wires":[[]]},{"id":"9433d64.bb31d28","type":"comment","z":"9f754981.3c9138","name":"Example on how to save multiple data points in DB","info":"This function node creates multiple INSERT INTO\ncommands for data points that are stored in \nattributes of the payload.","x":237,"y":46,"wires":[]},{"id":"29abcf9.62e5d3","type":"comment","z":"9f754981.3c9138","name":"Data aggregation","info":"Below example extract max, min and last from the\nsensor log table, and inserts them into an\naggregate table.","x":131.25,"y":347.5,"wires":[]},{"id":"64c734de.d89a1c","type":"inject","z":"9f754981.3c9138","name":"","repeat":"","crontab":"00 3 * * *","once":false,"topic":"","payload":"","payloadType":"date","x":120.25,"y":444.5000476837158,"wires":[["e6aaa902.077978"]]},{"id":"e6aaa902.077978","type":"function","z":"9f754981.3c9138","name":"Get Max values","func":"var d = new Date();\nvar epoch = d.getTime();\n// Go to previous day\nd.setTime(d.getTime()-(24*60*60*1000));\n// calculate begining of the day\nd.setHours(0);\nd.setMinutes(0);\nd.setSeconds(0);\nd.setMilliseconds(0);\nvar fromdate = d.getTime();\n// calculate end of the day\nd.setHours(23);\nd.setMinutes(59);\nd.setSeconds(59);\nd.setMilliseconds(999);\nvar enddate = d.getTime();\n\nmsg.topic = \"SELECT device,sensor,max(value) AS value FROM sensor_data WHERE epoch >= \" + fromdate + \" AND epoch <= \" + enddate + \" AND (sensor='temp' or sensor='power' or sensor='moisture') GROUP BY sensor\";\nreturn msg;","outputs":1,"noerr":0,"x":308.25,"y":443.5000476837158,"wires":[["34195f6d.b4ee1"]]},{"id":"34195f6d.b4ee1","type":"sqlite","z":"9f754981.3c9138","mydb":"ecac7bdd.76f698","name":"DB","x":495.25,"y":442.5000476837158,"wires":[["14348587.7c084a"]]},{"id":"57556b0c.7692f4","type":"function","z":"9f754981.3c9138","name":"Get Min values","func":"var d = new Date();\nvar epoch = d.getTime();\n// Go to previous day\nd.setTime(d.getTime()-(24*60*60*1000));\n// calculate begining of the day\nd.setHours(0);\nd.setMinutes(0);\nd.setSeconds(0);\nd.setMilliseconds(0);\nvar fromdate = d.getTime();\n// calculate end of the day\nd.setHours(23);\nd.setMinutes(59);\nd.setSeconds(59);\nd.setMilliseconds(999);\nvar enddate = d.getTime();\n\nmsg.topic = \"SELECT device,sensor,MIN(value) as value FROM sensor_data WHERE epoch >= \" + fromdate + \" AND epoch <= \" + enddate + \" AND (sensor='temp' OR sensor='battery') GROUP BY sensor\";\nreturn msg;","outputs":1,"noerr":0,"x":308.25,"y":544.5000476837158,"wires":[["60dc6a07.c00334"]]},{"id":"60dc6a07.c00334","type":"sqlite","z":"9f754981.3c9138","mydb":"ecac7bdd.76f698","name":"DB","x":495.25,"y":543.5000476837158,"wires":[["598254f.54c8fac"]]},{"id":"5d07865.acf4e78","type":"function","z":"9f754981.3c9138","name":"Get Last values","func":"var output = [];\nvar d = new Date();\nvar epoch = d.getTime();\n// Go to previous day\nd.setTime(d.getTime()-(24*60*60*1000));\n// calculate begining of the day\nd.setHours(0);\nd.setMinutes(0);\nd.setSeconds(0);\nd.setMilliseconds(0);\nvar fromdate = d.getTime();\n// calculate end of the day\nd.setHours(23);\nd.setMinutes(59);\nd.setSeconds(59);\nd.setMilliseconds(999);\nvar enddate = d.getTime();\n\noutput.push({ topic:\"SELECT device,sensor,value FROM sensor_data WHERE epoch >= \" + fromdate + \" AND epoch <= \" + enddate + \" AND device='growatt' AND sensor='today' ORDER BY id DESC LIMIT 1 \" });\noutput.push({ topic:\"SELECT device,sensor,value FROM sensor_data WHERE epoch >= \" + fromdate + \" AND epoch <= \" + enddate + \" AND device='miflora' AND sensor='moisture' ORDER BY id DESC LIMIT 1 \" });\n\nreturn [output];","outputs":1,"noerr":0,"x":308.25,"y":660.5000476837158,"wires":[["bc69dbb3.0f8cc8"]]},{"id":"bc69dbb3.0f8cc8","type":"sqlite","z":"9f754981.3c9138","mydb":"ecac7bdd.76f698","name":"DB","x":495.25,"y":659.5000476837158,"wires":[["b681c100.4a0e5"]]},{"id":"d2add4d6.55aa08","type":"inject","z":"9f754981.3c9138","name":"","repeat":"","crontab":"01 3 * * *","once":false,"topic":"","payload":"","payloadType":"date","x":125.25,"y":548.5000476837158,"wires":[["57556b0c.7692f4"]]},{"id":"61fd3180.54ad7","type":"inject","z":"9f754981.3c9138","name":"","repeat":"","crontab":"02 3 * * *","once":false,"topic":"","payload":"","payloadType":"date","x":119.25,"y":663.5000476837158,"wires":[["5d07865.acf4e78"]]},{"id":"b681c100.4a0e5","type":"function","z":"9f754981.3c9138","name":"SQL Updates","func":"var output = [];\nvar d = new Date();\nvar epoch = d.getTime();\n// Go to previous day\nd.setTime(d.getTime()-(24*60*60*1000));\n// calculate begining of the day\nd.setHours(0);\nd.setMinutes(0);\nd.setSeconds(0);\nd.setMilliseconds(0);\nvar fromdate = d.getTime();\n\nmsg.topic = \"INSERT OR REPLACE INTO sensor_aggr (epoch,device,sensor,value) VALUES(\"+fromdate+\",'\"+msg.payload[0].device+\"','\"+msg.payload[0].sensor+\"',\"+msg.payload[0].value+\")\";\n\nreturn msg;","outputs":1,"noerr":0,"x":675.2500152587891,"y":705.5000953674316,"wires":[["cb7d05b5.d7de48"]]},{"id":"14348587.7c084a","type":"function","z":"9f754981.3c9138","name":"SQL Updates","func":"var output = [];\nvar d = new Date();\nvar epoch = d.getTime();\n// Go to previous day\nd.setTime(d.getTime()-(24*60*60*1000));\n// calculate begining of the day\nd.setHours(0);\nd.setMinutes(0);\nd.setSeconds(0);\nd.setMilliseconds(0);\nvar fromdate = d.getTime();\n\nfor (var i=0; i<msg.payload.length; i++) {\n    output.push({ topic:\"INSERT OR REPLACE INTO sensor_aggr (epoch,device,sensor,value) VALUES(\"+fromdate+\",'\"+msg.payload[i].device+\"','\"+msg.payload[i].sensor+\"_max',\"+msg.payload[i].value+\")\" });\n}\n\nreturn [output];","outputs":1,"noerr":0,"x":656.2500152587891,"y":497.50009536743164,"wires":[["cb7d05b5.d7de48"]]},{"id":"598254f.54c8fac","type":"function","z":"9f754981.3c9138","name":"SQL Updates","func":"var output = [];\nvar d = new Date();\nvar epoch = d.getTime();\n// Go to previous day\nd.setTime(d.getTime()-(24*60*60*1000));\n// calculate begining of the day\nd.setHours(0);\nd.setMinutes(0);\nd.setSeconds(0);\nd.setMilliseconds(0);\nvar fromdate = d.getTime();\n\nfor (var i=0; i<msg.payload.length; i++) {\n    output.push({ topic:\"INSERT OR REPLACE INTO sensor_aggr (epoch,device,sensor,value) VALUES(\"+fromdate+\",'\"+msg.payload[i].device+\"','\"+msg.payload[i].sensor+\"_min',\"+msg.payload[i].value+\")\" });\n}\n\nreturn [output];","outputs":1,"noerr":0,"x":670.2500152587891,"y":599.5000953674316,"wires":[["cb7d05b5.d7de48"]]},{"id":"cb7d05b5.d7de48","type":"sqlite","z":"9f754981.3c9138","mydb":"ecac7bdd.76f698","name":"DB","x":908.5833282470703,"y":560.5000953674316,"wires":[[]]},{"id":"a64254d1.a7e478","type":"comment","z":"9f754981.3c9138","name":"Calculate aggregated values (min,max,last)","info":"","x":395.5833282470703,"y":396.5000476837158,"wires":[]},{"id":"f0c4e73c.063ce8","type":"comment","z":"9f754981.3c9138","name":"Insert aggregated values to new table","info":"","x":756.5833282470703,"y":448.5000476837158,"wires":[]},{"id":"16a83281.46abed","type":"ui_chart","z":"9f754981.3c9138","name":"Temperature","group":"2f20f4ba.c4dd6c","order":2,"width":"","height":"","label":"","chartType":"line","xformat":"%H:%M:%S","interpolate":"linear","nodata":"No Data","ymin":"","ymax":"","removeOlder":"1","removeOlderUnit":"86400","outputs":1,"x":628.25,"y":248.75,"wires":[["fe736830.412a08"]]},{"id":"fe736830.412a08","type":"file","z":"9f754981.3c9138","name":"Chart dump","filename":"/home/pi/charts/miflora_temp.dump","appendNewline":true,"createDir":false,"overwriteFile":"true","x":822.25,"y":242.75,"wires":[[]]},{"id":"13adfd4.c2a7803","type":"file in","z":"9f754981.3c9138","name":"Chart dump","filename":"/home/pi/charts/miflora_temp.dump","format":"utf8","x":270.25,"y":250.75,"wires":[["ba46a969.7ed1b8"]]},{"id":"fe0fde2.428a42","type":"inject","z":"9f754981.3c9138","name":"Startup","repeat":"","crontab":"","once":true,"topic":"","payload":"","payloadType":"date","x":116.25,"y":251.75,"wires":[["13adfd4.c2a7803"]]},{"id":"ba46a969.7ed1b8","type":"json","z":"9f754981.3c9138","name":"","x":422.25,"y":250.75,"wires":[["16a83281.46abed"]]},{"id":"6fd47fb5.750f","type":"comment","z":"9f754981.3c9138","name":"Dashboard graph backup example","info":"This flow section shows how to back up the graph\nstate to a local file and restore that at startup.\nThis loads the last graph state so you don't get\nthe \"No data\" screen after node red restart.","x":187.5,"y":191.25,"wires":[]},{"id":"3d964dd0.cc4d62","type":"function","z":"9f754981.3c9138","name":"SQL","func":"// This will handle any device and any attribute as long as it is in the DB\nvar Week  = 604800000 ; //7 Days\nvar Day   =  86400000 ; // 1 Days\nvar d = new Date();\nvar epoch = d.getTime();\nvar fromdate = epoch - Day;\nvar enddate = epoch;\nvar output = [];\n\nfor (var property in msg.payload) {\n    if (msg.payload.hasOwnProperty(property)) {\n        //output.push({ payload: property + \" has value \"+msg.payload[property] });\n        if (msg.payload[property]) {\n            var parts = property.split(\"/\");\n            if (parts[0]===\"period\") {\n                switch (parts[1]) {\n                    case \"today\":\n                        fromdate = epoch-Day;\n                        enddate = epoch;\n                        break;\n                    case \"yesterday\":\n                        fromdate = epoch-2*Day;\n                        enddate = epoch-Day;\n                        break;\n                    case \"week\":\n                        fromdate = epoch-Week;\n                        enddate = epoch;\n                        break;\n                }\n            } else {\n                output.push({ topic: \"SELECT * FROM sensor_data WHERE device='\"+parts[0]+\"' AND sensor='\"+parts[1]+\"' AND epoch >= \" + fromdate + \" AND epoch <= \" + enddate });\n            }\n        }\n    }\n}\n\noutput[output.length-1].complete=true;\n\nreturn [ output ];\n\n//msg.topic = \"SELECT * FROM sensor_data WHERE device='growatt' AND sensor='power' AND epoch >= \" + fromdate + \" AND epoch <= \" + epoch ;\n//return msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":316.25,"y":895,"wires":[["7595c050.3a204"]]},{"id":"7595c050.3a204","type":"sqlite","z":"9f754981.3c9138","mydb":"ecac7bdd.76f698","name":"DB","x":462.25,"y":896,"wires":[["f6cd9f9c.89e26"]]},{"id":"82a4db95.cc3f48","type":"ui_chart","z":"9f754981.3c9138","name":"Chart","group":"a5f1f4cd.5442c8","order":0,"width":0,"height":0,"label":"","chartType":"line","legend":"false","xformat":"%a %H:%M","interpolate":"linear","nodata":"","ymin":"","ymax":"","removeOlder":"1","removeOlderUnit":"604800","outputs":1,"x":809.25,"y":996,"wires":[[]]},{"id":"a9aacabd.8daae8","type":"function","z":"9f754981.3c9138","name":"Prep","func":"var msg2 = [];\n\n// this is the logic when there are multiple data sets are received\nfor (var i=0; i<msg.payload.length; i++) {\n    var output = [];\n    for (var j=0; j<msg.payload[i].length; j++) {\n        output.push([msg.payload[i][j].epoch, msg.payload[i][j].value]);\n    }\n    msg2.push({ key: msg.payload[i][0].device+\"/\"+msg.payload[i][0].sensor, values : output});\n    //msg2.push({ key: \"test\", values : output});\n}\n\nmsg.payload=msg2;\n//msg.payload = [ { key: \"Power\", values : output} ];\n//msg.topic = \"Power\";\nreturn msg;","outputs":1,"noerr":0,"x":793.25,"y":898,"wires":[["82a4db95.cc3f48"]]},{"id":"4b6e460.6d0acbc","type":"inject","z":"9f754981.3c9138","name":"Reset chart","props":[{"p":"payload","v":"","vt":"date"},{"p":"topic","v":"","vt":"string"}],"repeat":"","crontab":"","once":false,"topic":"","payload":"","payloadType":"date","x":151.25,"y":1018,"wires":[["767475b7.59a73c"]]},{"id":"767475b7.59a73c","type":"function","z":"9f754981.3c9138","name":"Empty payload","func":"msg.payload = [];\nreturn msg;","outputs":1,"noerr":0,"x":479.25,"y":1017,"wires":[["82a4db95.cc3f48"]]},{"id":"4ef9ae79.27142","type":"ui_form","z":"9f754981.3c9138","name":"Data points","label":"","group":"6d8b13cf.4722dc","order":0,"width":0,"height":0,"options":[{"label":"Period: today","value":"period/today","type":"checkbox","required":false},{"label":"Period: yesterday","value":"period/yesterday","type":"checkbox","required":false},{"label":"Period: this week","value":"period/week","type":"checkbox","required":false},{"label":"Miflora temperature","value":"miflora/temp","type":"checkbox","required":false},{"label":"Miflora battery level","value":"miflora/battery","type":"checkbox","required":false},{"label":"Miflora sunlight","value":"miflora/sunlight","type":"checkbox","required":false},{"label":"Miflora soil moisture","value":"miflora/moisture","type":"checkbox","required":false},{"label":"Miflora soil fertility","value":"miflora/fertility","type":"checkbox","required":false},{"label":"Solar power","value":"growatt/power","type":"checkbox","required":false},{"label":"Solar voltage","value":"growatt/voltage","type":"checkbox","required":false}],"formValue":{"period/today":false,"period/yesterday":false,"period/week":false,"miflora/temp":false,"miflora/battery":false,"miflora/sunlight":false,"miflora/moisture":false,"miflora/fertility":false,"growatt/power":false,"growatt/voltage":false},"payload":"","topic":"","x":121.25,"y":842,"wires":[["3d964dd0.cc4d62"]]},{"id":"f6cd9f9c.89e26","type":"join","z":"9f754981.3c9138","name":"","mode":"custom","build":"array","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","timeout":"","count":"","x":604.25,"y":896,"wires":[["a9aacabd.8daae8"]]},{"id":"bb107006.8d2b1","type":"comment","z":"9f754981.3c9138","name":"Dynamic report example","info":"This flow can generate graph based from data stored\nin the database and display multiple data points\nin a single graph.","x":153.75,"y":787.5,"wires":[]},{"id":"98472729.898ec8","type":"ui_form","z":"ad02f558.1850b8","name":"Data points","label":"filtros","group":"6d8b13cf.4722dc","order":0,"width":0,"height":0,"options":[{"label":"Period: today","value":"period/today","type":"checkbox","required":false,"rows":null},{"label":"Period: yesterday","value":"period/yesterday","type":"checkbox","required":false,"rows":null},{"label":"Period: this week","value":"period/week","type":"checkbox","required":false,"rows":null},{"label":"Temperature","value":"nodemcu/temp","type":"checkbox","required":false,"rows":null},{"label":"Humedad","value":"nodemcu/humidity","type":"checkbox","required":false,"rows":null}],"formValue":{"period/today":false,"period/yesterday":false,"period/week":false,"nodemcu/temp":false,"nodemcu/humidity":false},"payload":"","submit":"OK","cancel":"CANCEL","topic":"","x":110,"y":180,"wires":[["6a9c8f9a.9dada"]]},{"id":"6a9c8f9a.9dada","type":"function","z":"ad02f558.1850b8","name":"SQL","func":"// This will handle any device and any attribute as long as it is in the DB\nvar Week  = 604800000 ; //7 Days\nvar Day   =  86400000 ; // 1 Days\nvar d = new Date();\nvar epoch = d.getTime();\nvar fromdate = epoch - Day;\nvar enddate = epoch;\nvar output = [];\n\nfor (var property in msg.payload) {\n    if (msg.payload.hasOwnProperty(property)) {\n        //output.push({ payload: property + \" has value \"+msg.payload[property] });\n        if (msg.payload[property]) {\n            var parts = property.split(\"/\");\n            if (parts[0]===\"period\") {\n                switch (parts[1]) {\n                    case \"today\":\n                        fromdate = epoch-Day;\n                        enddate = epoch;\n                        break;\n                    case \"yesterday\":\n                        fromdate = epoch-2*Day;\n                        enddate = epoch-Day;\n                        break;\n                    case \"week\":\n                        fromdate = epoch-Week;\n                        enddate = epoch;\n                        break;\n                }\n            } else {\n                output.push({ topic: \"SELECT * FROM sensor_data WHERE device='\"+parts[0]+\"' AND sensor='\"+parts[1]+\"' AND epoch >= \" + fromdate + \" AND epoch <= \" + enddate });\n            }\n        }\n    }\n}\n\noutput[output.length-1].complete=true;\n\nreturn [ output ];\n\n//msg.topic = \"SELECT * FROM sensor_data WHERE device='growatt' AND sensor='power' AND epoch >= \" + fromdate + \" AND epoch <= \" + epoch ;\n//return msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":270,"y":180,"wires":[["8d0a80e1.b72e6"]]},{"id":"8d0a80e1.b72e6","type":"sqlite","z":"ad02f558.1850b8","mydb":"7fa7a2.3465486","sql":"","name":"DB","x":410,"y":180,"wires":[["9c32c061.24e36"]]},{"id":"711c312d.a37f4","type":"ui_chart","z":"ad02f558.1850b8","name":"Chart","group":"a5f1f4cd.5442c8","order":0,"width":0,"height":0,"label":"","chartType":"line","legend":"false","xformat":"HH:mm:ss","interpolate":"linear","nodata":"","dot":false,"ymin":"","ymax":"","removeOlder":"1","removeOlderPoints":"","removeOlderUnit":"604800","cutout":"","useOneColor":false,"useUTC":false,"colors":["#1f77b4","#aec7e8","#ff7f0e","#2ca02c","#98df8a","#d62728","#ff9896","#9467bd","#c5b0d5"],"outputs":1,"x":830,"y":180,"wires":[[]]},{"id":"8a1f2eec.89a33","type":"function","z":"ad02f558.1850b8","name":"Prep","func":"var msg2 = [];\n\n// this is the logic when there are multiple data sets are received\nfor (var i=0; i<msg.payload.length; i++) {\n    var output = [];\n    for (var j=0; j<msg.payload[i].length; j++) {\n        output.push([msg.payload[i][j].epoch, msg.payload[i][j].value]);\n    }\n    msg2.push({ key: msg.payload[i][0].device+\"/\"+msg.payload[i][0].sensor, values : output});\n    //msg2.push({ key: \"test\", values : output});\n}\n\nmsg.payload=msg2;\n//msg.payload = [ { key: \"Power\", values : output} ];\n//msg.topic = \"Power\";\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":690,"y":180,"wires":[["711c312d.a37f4"]]},{"id":"9c32c061.24e36","type":"join","z":"ad02f558.1850b8","name":"","mode":"custom","build":"array","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":550,"y":180,"wires":[["8a1f2eec.89a33"]]},{"id":"be1cbd06.c2962","type":"inject","z":"ad02f558.1850b8","name":"Reset chart","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":"","topic":"","payload":"","payloadType":"date","x":230,"y":300,"wires":[["4a1813e7.0e54bc"]]},{"id":"4a1813e7.0e54bc","type":"function","z":"ad02f558.1850b8","name":"Empty payload","func":"msg.payload = [];\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":558,"y":299,"wires":[["711c312d.a37f4"]]}]